{"version":3,"file":"static/js/742.fa3eceea.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Text = styled.p`\n  /* padding: 10px 20px; */\n  margin-bottom: 15px;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 10px;\n  border: 1px solid #82d47b;\n  border-radius: 5px;\n  transition: border-color 0.3s ease;\n  width: 400px;\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n\n  &:focus {\n    border-color: #00ff00;\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  transition: transform 0.3s, font-size 0.3s, color 0.3s;\n  pointer-events: none;\n  color: #666;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: #82d47b;\n  margin-top: 10px;\n  pointer-events: none;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const ButtonForm = styled.button`\n  font-size: 25px;\n  padding: 10px 15px;\n  background-color: #82d47b;\n  color: white;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  width: 320px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n    width: 150px;\n  }\n\n  &:active {\n    background-color: black;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import React from 'react';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledField,\n  ErrorMsg,\n  InputContainer,\n  Text,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Button } from '@chakra-ui/react';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[a-zA-Z\\s]+$/, 'Please, enter only letter')\n    .min(3, 'Too short!')\n    .required('This field is required!'),\n  number: Yup.string()\n    .matches(/^\\d{3}-\\d{3}-\\d{2}-\\d{2}$/, 'Format: 066-123-45-67')\n    .required('This field is required!'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={formSchema}\n      onSubmit={(values, helpers) => {\n        const check = contacts.some(({ name }) => name === values.name);\n        if (check) {\n          alert(`${values.name} is already in contacts`);\n          return;\n        }\n        const finalContact = {\n          name: values.name,\n          number: values.number,\n        };\n        dispatch(addContact(finalContact));\n        helpers.resetForm();\n      }}\n    >\n      <StyledForm>\n        <InputContainer>\n          <Text>Name</Text>\n          <StyledField type=\"text\" name=\"name\" />\n\n          <ErrorMsg name=\"name\" component=\"div\" />\n        </InputContainer>\n        <InputContainer>\n          <Text>Number</Text>\n          <StyledField type=\"tel\" name=\"number\" />\n\n          <ErrorMsg name=\"number\" component=\"div\" />\n        </InputContainer>\n\n        <Button\n          // bg=\"#82d47b\"\n          border=\"1px solid #82d47b\"\n          borderRadius=\"4px 8px\"\n          colorScheme=\"green\"\n          _activeLink={{ bg: 'white', color: '#82d47b' }}\n          bgGradient=\"linear(to-l, #23eb27, #82d47b)\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { Box, Text, Input } from '@chakra-ui/react';\n\nfunction Filter() {\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n  const dispatch = useDispatch();\n  return (\n    <Box mb=\"12px\" mt=\"32px\">\n      <Text\n        as=\"label\"\n        fontSize=\"28px\"\n        fontWeight=\"semibold\"\n        paddingLeft=\"40px\"\n        bgGradient=\"linear(to-l, #23eb27, #82d47b)\"\n        bgClip=\"text\"\n      >\n        Find contacts by name\n        <Input\n          fontSize=\"24px\"\n          fontWeight=\"semibold\"\n          width=\"400px\"\n          padding=\"10px\"\n          margin=\"0 auto\"\n          color=\"black\"\n          borderRadius=\"4px\"\n          border=\"1px solid #82d47b\"\n          type=\"text\"\n          value={useSelector(selectFilter)}\n          onChange={handleFilterChange}\n        />\n      </Text>\n    </Box>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Box, Button, Card, CardBody, Flex, Text } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex\n      as=\"ul\"\n      flexDirection=\"column\"\n      mt={12}\n      w=\"400px\"\n      border=\"1px solid #82d47b\"\n      padding=\"12px\"\n    >\n      {contacts.map(({ id, name, number }) => (\n        <Card as=\"li\" w=\"100%\" mb=\"5px\" border=\"5px solid #82d47b\" key={id}>\n          <CardBody\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Text color=\"black\" fontSize=\"20px\" fontWeight=\"semibold\">\n              {name}:\n            </Text>\n            <Box alignItems=\"center\" display=\"flex\" gap={7}>\n              <Text fontWeight=\"semibold\" fontSize=\"20px\">\n                {number}\n              </Text>\n\n              <Button\n                bg=\"#82d47b\"\n                border=\"1px solid #82d47b\"\n                borderRadius=\"4px 8px\"\n                type=\"button\"\n                name=\"delete\"\n                colorScheme=\"green\"\n                _activeLink={{ bg: 'white', color: '#82d47b' }}\n                bgGradient=\"linear(to-l, #23eb27, #82d47b)\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                &times;\n              </Button>\n            </Box>\n          </CardBody>\n        </Card>\n      ))}\n    </Flex>\n  );\n};\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n// import { Container } from 'components/App.styled';\nimport { Box, Text } from '@chakra-ui/react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const loading = useSelector(selectIsLoading);\n\n  return (\n    <Box bg=\"#dffecf\" alignItems=\"center\" justify=\"center\" h=\"100vh\">\n      <Box width=\"400px\" padding=\"10px\" margin=\"0 auto\">\n        <Text\n          bgGradient=\"linear(to-l, #23eb27, #82d47b)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n        >\n          Phonebook\n        </Text>\n        <ContactForm />\n        <Filter />\n        {loading && <Loader />}\n        {contacts.length > 0 && <ContactList />}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Text","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","StyledField","Field","_templateObject3","ErrorMsg","_templateObject4","ErrorMessage","_templateObject5","InputContainer","_templateObject6","_templateObject7","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","formSchema","Yup","shape","matches","min","required","number","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","helpers","some","_ref","alert","concat","finalContact","addContact","resetForm","children","_jsxs","type","component","Button","border","borderRadius","colorScheme","_activeLink","bg","color","bgGradient","Box","mb","mt","as","fontSize","fontWeight","paddingLeft","bgClip","Input","width","padding","margin","value","onChange","event","changeFilter","target","Flex","flexDirection","w","map","id","Card","CardBody","display","justifyContent","alignItems","gap","onClick","deleteContact","useEffect","fetchContacts","loading","justify","h","ContactForm","Filter","Loader","length","ContactList"],"sourceRoot":""}